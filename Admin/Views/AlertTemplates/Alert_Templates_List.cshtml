
					<!--This code generated from staging Powered by Mahat, Source Machine : stg , Build Number : #2024-07-004 (Updated on 07/07/2024 22:07) on 06/12/2025 10:05:57 -->
					@using Microsoft.AspNetCore.Http
					@inject IHttpContextAccessor HttpContextAccessor
                    @using Admin;
					@model JmeterPublish.Models.AlertTemplatesModel
					@{
					ViewData["Title"] = @Resource.alerttemplateslist;
					Layout = "~/Views/Shared/_Layout.cshtml";
					}

					<div class="card " style="padding:20px;">
					<div class="mobileHeader"><!--form_card_header-->
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<h3 class="formHdr">@Resource.alerttemplateslist</h3>
					</div>
					</div>
					</div><!--form_card_header-->
					<div class="card-body" style="padding:1px;padding-top:0px;">

					@if(TempData["errMessage"] != null)
					{
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<div class="alert alert-danger alert-dismissible ">
					<button type="button" class="close" data-dismiss="alert" aria-label="Close">
					<span aria-hidden="true">x</span>
					</button>
					Info :  @TempData["errMessage"]
					</div>
					</div>
					</div>
					}

					@if(TempData["message"] != null)
					{
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<div class="alert alert-success alert-dismissible ">
					<button type="button" class="close" data-dismiss="alert" aria-label="Close">
					<span aria-hidden="true">x</span>
					</button>
					Info :  @TempData["message"]
					</div>
					</div>
					</div>
					}

					<input type="hidden" id="AlertTemplatesid" name="AlertTemplatesid"/>
					<div class="row">
					<div class="col-sm-2 col-xs-12 p-2 entityname_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="entityname">@Resource.alerttemplates_entityname</label>
                                @Html.TextBoxFor(m => m.entityname, new {@type="text",@maxlength="128", @class = "form-control form-control-lg mahat_transliterate " })

							     @Html.ValidationMessageFor(model => model.entityname)
							</div>
						</div>
					</div>
<div class="col-sm-2 col-xs-12 p-2 entityaction_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="entityaction">@Resource.alerttemplates_entityaction</label>
                                @Html.TextBoxFor(m => m.entityaction, new {@type="text",@maxlength="128", @class = "form-control form-control-lg mahat_transliterate " })

							     @Html.ValidationMessageFor(model => model.entityaction)
							</div>
						</div>
					</div>
<div class="col-sm-2 col-xs-12 p-2 alerttype_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label for="alerttype">@Resource.alerttemplates_alerttype</label>
										<select name="alerttype" id="alerttype" class="form-control  "></select>

									</div>
									@Html.ValidationMessageFor(model => model.alerttype)
									<div id="alerttype-error" class="help-block" style="display: none" role="alert"></div>
								</div>
							</div>
<div class="col-sm-2 p-2">

												<button id="btnFilter" class="btn btn-secondary btn--icon-text mt-5"><i class="fa fa-filter"></i> Filter</button>

												</div>

					</div>

					<div class="row"><div class="col-sm-12 col-xs-12">
					<div class="table-responsive" style="margin:0px;">
					<table id="tblAlertTemplates" class="table order-column hover responsive nowrap mahatTableWidthSetter" style="margin:0px; ">
					<thead class="thead-default">
					<tr>
                    
					<th>@Resource.alerttemplates_entityname</th>
<th>@Resource.alerttemplates_entityaction</th>
<th>@Resource.alerttemplates_sendasbatch</th>
<th>@Resource.alerttemplates_alerttype</th>
<th>@Resource.alerttemplates_alertsubject</th>
<th>@Resource.alerttemplates_alertcopyto</th>
<th>@Resource.alerttemplates_alertcarboncopyto</th>
<th>@Resource.alerttemplates_alertcontent</th>

					<th class="all">Action</th>
					

					</tr>
					</thead>
					<tbody></tbody>
					
					</table>
					</div>

					</div>
					
					
					</div>
					
					</div>
					</div>
					
                    <link href="~/components/jquery-colorbox/colorbox.css" rel="stylesheet" />
                    <script src="~/components/jquery-colorbox/jquery.colorbox.js"></script>
                    <link href="~/css/GallaryContent/style.css" rel="stylesheet" />
                    <link href="~/components/starrr/starrr.css" rel="stylesheet" />
					
					<script type="text/javascript">

                 var arr_selected_for_verification = [];

					function fill_AlertTemplates()
					{
						

					var sendFilterData = {
			 					"entityname":$("#entityname").val(),
"entityaction":$("#entityaction").val(),
"alerttype":$("#alerttype").val(),
 
								}

					


					

var table=$("#tblAlertTemplates").DataTable({
columnDefs: [{ 
     targets: -1,
     title: '<i class="fa fa-pencil fa-lg"></i>'
  }],
        
		destroy:true,
"orderMulti": false,
	"order": [],"aaSorting": [],
 	autoWidth: !1,responsive:!0,
	lengthMenu: [
	[15, 30, 45, -1],
	["15 Rows", "30 Rows", "45 Rows", "Everything"]
	],
	language: {
	searchPlaceholder: "Search for records..."
	},
	 language: { search: '<i class="fa fa-search"></i>', searchPlaceholder: "Search for records..." },
	dom: "Bfrtip", sDom: '<"dataTables__top"lfB>rt<"dataTables__bottom"ip><"clear">',
  
	buttons: [{
	extend: "excelHtml5",
	title: "List Of AlertTemplates Data"
	}, {
	extend: "csvHtml5",
	title: "List Of AlertTemplates Data"
	}, {
	extend: "print",
	title: "List Of AlertTemplates Data"
	}],
 initComplete: function(a, b) {



      $(this).closest(".dataTables_wrapper").find(".dt-buttons").hide();
      
if ($('#btnFilter').length) {
     $(this).closest(".dataTables_wrapper").find(".dataTables_length").prepend(`
        <i class="automatonShowFilter actions__item mdi material-icons">filter_alt</i>
      `);
 }
var Actions=getAutho("AlertTemplates","create")
		if(Actions != undefined){
			var create_URL = "@Url.Action("entry.viewname", "AlertTemplates")"
		    create_URL = create_URL.replace("entry.viewname", Actions.actionmethodname);
            
            $(this).closest(".dataTables_wrapper").find(".dataTables__top").prepend(`
           
        <div class="dataTables_buttons actions">
            <div class="input-group prefix">
	                        <span class="input-group-addon">
	                        <i class="material-icons">search</i>
	                        </span>
	                        <input type="text" class="form-control dt-global-search" placeholder="Search..." />
                        </div>
          <div class="dropdown actions__item cma_top_icon">
            <i data-toggle="dropdown" class="material-icons">share</i>
            <ul class="dropdown-menu dropdown-menu-right">
              <a href="javascript: void 0" class="dropdown-item" data-table-action="excel">Excel (.xlsx)</a>
              <a href="javascript: void 0" class="dropdown-item" data-table-action="csv">CSV (.csv)</a>
             
            </ul>
          </div>
         <div class="dropdown actions__item cma_top_icon">
                                    <i data-toggle="dropdown" class="material-icons">settings</i>
                                    <ul class="dropdown-menu dropdown-menu-right ColVis_collection">
                                    <li>
                                                                <label> @Resource.alerttemplates_entityname
 <input type="checkbox" class="colvis_switch" data-column="0" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_entityaction
 <input type="checkbox" class="colvis_switch" data-column="1" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_sendasbatch
 <input type="checkbox" class="colvis_switch" data-column="2" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alerttype
 <input type="checkbox" class="colvis_switch" data-column="3" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alertsubject
 <input type="checkbox" class="colvis_switch" data-column="4" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alertcopyto
 <input type="checkbox" class="colvis_switch" data-column="5" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alertcarboncopyto
 <input type="checkbox" class="colvis_switch" data-column="6" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alertcontent
 <input type="checkbox" class="colvis_switch" data-column="7" checked /></label>
                                                              </li>
   
                                    </ul>
                                    </div>

         <a href="create_URL" class="btn btn-rounded add-row-btn cma_add_button">Add <span class="material-icons">add</span></a>
        </div>
      `.replace("create_URL", create_URL))
if ($(this).hasClass('make-active')) {
        $('tbody', $(this)).children('tr').first().addClass('active-row');
        setTimeout(() => {
          $('.active-row td:visible:last').addClass('last-active-td');
        }, 200);
      }
      $(this).closest(".dataTables_wrapper").find(".dt-global-search").on('keyup', function() {
        table.search(this.value).draw();
      });

        }
            else{
            $(this).closest(".dataTables_wrapper").find(".dataTables__top").prepend(` 
        
        
        <div class="dataTables_buttons actions">
        <div class="input-group prefix">
	                        <span class="input-group-addon">
	                        <i class="material-icons">search</i>
	                        </span>
	                        <input type="text" class="form-control dt-global-search" placeholder="Search..." />
                        </div>
          <div class="dropdown actions__item cma_top_icon">
            <i data-toggle="dropdown" class="material-icons">share</i>
            <ul class="dropdown-menu dropdown-menu-right">
              <a href="javascript: void 0" class="dropdown-item" data-table-action="excel">Excel (.xlsx)</a>
              <a href="javascript: void 0" class="dropdown-item" data-table-action="csv">CSV (.csv)</a>
             
            </ul>
          </div>
         <div class="dropdown actions__item cma_top_icon">
                                    <i data-toggle="dropdown" class="material-icons">settings</i>
                                    <ul class="dropdown-menu dropdown-menu-right ColVis_collection">
                                    <li>
                                                                <label> @Resource.alerttemplates_entityname
 <input type="checkbox" class="colvis_switch" data-column="0" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_entityaction
 <input type="checkbox" class="colvis_switch" data-column="1" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_sendasbatch
 <input type="checkbox" class="colvis_switch" data-column="2" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alerttype
 <input type="checkbox" class="colvis_switch" data-column="3" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alertsubject
 <input type="checkbox" class="colvis_switch" data-column="4" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alertcopyto
 <input type="checkbox" class="colvis_switch" data-column="5" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alertcarboncopyto
 <input type="checkbox" class="colvis_switch" data-column="6" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alerttemplates_alertcontent
 <input type="checkbox" class="colvis_switch" data-column="7" checked /></label>
                                                              </li>
   
                                    </ul>
                                    </div>
        </div>
      `)
if ($(this).hasClass('make-active')) {
        $('tbody', $(this)).children('tr').first().addClass('active-row');
        setTimeout(() => {
          $('.active-row td:visible:last').addClass('last-active-td');
        }, 200);
      }
      $(this).closest(".dataTables_wrapper").find(".dt-global-search").on('keyup', function() {
        table.search(this.value).draw();
      });

        }
        
    }
	 ,columns: [
            
		{data: 'entityname'},
{data: 'entityaction'},
{data: 'sendasbatch'},
{data: 'alerttype'},
{data: 'alertsubject'},
{data: 'alertcopyto',mRender: function (data, type, row) {if(row["alertcopyto"]==null) {
 return '-' 
}else {
 return '<a  href="mailto:' + row["alertcopyto"]+ '">'+ row["alertcopyto"]+ '</a>' 
}
}},
{data: 'alertcarboncopyto',mRender: function (data, type, row) {if(row["alertcarboncopyto"]==null) {
 return '-' 
}else {
 return '<a  href="mailto:' + row["alertcarboncopyto"]+ '">'+ row["alertcarboncopyto"]+ '</a>' 
}
}},
{data: 'alertcontent'},

		{
                    "sName": "alerttemplatesid",
                    "bSearchable": false,
                    "bSortable": false,
                    data: 'alerttemplatesid', "className": "dt-center",
                    mRender: function(data, type, row) {
                    var Actions=getAuthoController("AlertTemplates")
		            var appendMessage='';
                    if(Actions !=undefined)
                    {
                    for (var index = 0; index < Actions.length; ++index) {
                    var entry = Actions[index];
			 
                    if(entry.viewname !="list" && entry.viewname !="list_verify_approved" && entry.viewname !="list_verify" && entry.viewname !="create" && entry.viewname !="post" && entry.viewname !="getall" && entry.viewname !="get" && entry.viewname !="check_user" && entry.viewname !="change_password"){
                    var URL = "@Url.Action("entry.viewname", "AlertTemplates")?AlertTemplatesid=" + row["alerttemplatesid"]
                    URL = URL.replace("entry.viewname", entry.actionmethodname);
			 
                    if(entry.viewname=="delete")
                    {
	                    
	                    appendMessage+='<a href="' + URL + '" class="dropdown-item deleteRecordFromTable">'+entry.actiondisplayname+'</a>' 	
				   
				
                    }
                    
                      else if(entry.viewname=="detail")
            {
      var DETAIL_URL = "@Url.Action("entry.actionmethodname", "AlertTemplates")?AlertTemplatesid=" + row["alerttemplatesid"]
                    DETAIL_URL = DETAIL_URL.replace("entry.actionmethodname", entry.actionmethodname);
	                    appendMessage+='<a href="' + DETAIL_URL + '" class="dropdown-item">View</a>' 		

				
 }
                    else
                    {
                     
	                    appendMessage+='<a href="' + URL + '" class="dropdown-item">'+entry.actiondisplayname+'</a>' 
                    }
			 
                    }					 
						 
                    }
								
                    if(appendMessage =="")
                    {
                    return '-'

                    }
                    else
                    {
                    return '<div class="dropdown actions__item">' +
                    '<i data-toggle="dropdown" class="fa fa-ellipsis-h"></i>' +
                    '<div class="dropdown-menu dropdown-menu-right">' + appendMessage +
		 

                    '</div>' +
                    '</div>'
                    }



                    }
                    else
                    {
                    return '-'

                    }


                    }
                    }
	

	 ],
	ajax: {
	url: "@Url.Action("get_Alert_Templates_List", "AlertTemplates")",
	type: 'GET',
	dataType: 'json',
	dataSrc: '',
	data: sendFilterData,
	error: function(jqXHR, textStatus, errorThrown) {
	if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
	{
	swal({
	title: 'Failed!',
	text: jqXHR.responseText,
	type: 'error',
	buttonsStyling: false,
	confirmButtonClass: 'btn btn-primary',
	allowOutsideClick: false
	}).then(function() {
	window.location = "@Url.Action("AuthorizationFailed", "users")"
	}) 
	}
	else
	{
		swal({
		title: 'Contact Administrator !',
		text: jqXHR.responseText,
		type: 'error',
		buttonsStyling: false,
		confirmButtonClass: 'btn btn-primary'
		}) 
	}
	}
	}
	})
     
	  
 $('body').on('click', '.ColVis_collection li', function(a) {
    event.stopPropagation();
  });
 
 $('body').on('change', '.colvis_switch', function(a) {
    var column = table.column($(this).attr('data-column'));
    column.visible(!column.visible());
  });


 

   
	 


	


							
					}
                    	

					$(document).ready(function () {


					fill_AlertTemplates()


					var Actions=getAutho("AlertTemplates","list")
					if(Actions == undefined){
					window.location = "@Url.Action("RoleAuthorizationFailed", "users")"
					}




					});
					

                    $("body").on("click", "[data-table-action]", function(a) {
                    a.preventDefault();
                    var b = $(this).data("table-action");
                    console.log('dataTables_wrapper', $(this).closest(".dataTables_wrapper").find(".buttons-print"));
                    if ("excel" === b && $(this).closest(".dataTables_wrapper").find(".buttons-excel").trigger("click"), "csv" === b && $(this).closest(".dataTables_wrapper").find(".buttons-csv").trigger("click"), "print" === b && $(this).closest(".dataTables_wrapper").find(".buttons-print").trigger("click"), "fullscreen" === b) {
                    var c = $(this).closest(".card");
                    c.hasClass("card--fullscreen") ? (c.removeClass("card--fullscreen"), $("body").removeClass("data-table-toggled")) : (c.addClass("card--fullscreen"), $("body").addClass("data-table-toggled"))
                    }
                    });
					</script>
					<script>
var stralerttype;
</script>
@if (Model != null)
{
if(Model.alerttype != null && Model.alerttype.ToString() != "")
{
<script>
stralerttype="@Model.alerttype"
</script>
}
}

					<script>
$(document).ready(function () {
$.ajax({
url: '@Url.Action("get_lookups_by_entity","lookups")',
dataType: 'json',
data:{id: 'AlertTemplates' },
success: function(data) {



		$.each(data, function(index, optionDataInner) {

				
											if(optionDataInner.fieldname=="alerttype"){
												var ddltarget_alerttype = "#alerttype"
												$(ddltarget_alerttype).empty();
												$(ddltarget_alerttype).append("<option value=''>Choose</option>")
												var options_alerttype = optionDataInner.fielddesc.split(',');
                                                options_alerttype.sort(function (a, b) {
                                                                        return a.localeCompare(b);
                                                    });
												options_alerttype.forEach(function(option_alerttype){
													if(stralerttype== option_alerttype)
													$(ddltarget_alerttype).append('<option selected value="' + option_alerttype + '">' + option_alerttype+ '</option>')
													else
													$(ddltarget_alerttype).append('<option  value="' + option_alerttype + '">' + option_alerttype+ '</option>')
												      $(ddltarget_alerttype).trigger("change")
												})  
 
											}



		});


},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})
})
        
</script>
					
					
								<script>
								$(document).ready(function () {
							 

								$("#btnFilter").click(function(){
								fill_AlertTemplates();
								})
								});
								</script>


					
                    
                    
                    
					
