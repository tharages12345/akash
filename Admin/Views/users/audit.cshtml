
<!--This code generated from staging Powered by Mahat, Source Machine : stg , Build Number : #2024-07-004 (Updated on 07/07/2024 22:07) on 06/12/2025 10:05:51 -->
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
 @using Admin;
@{
    ViewData["Title"] = "users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}    <!--version-->
<style>
    /*version style*/
@@media only screen and (min-width:320px) and (max-width:1300px) {
        .version-tab.row {
            flex-direction: column;
        }
 
        .version-tab.row > div {
            width: 100%;
        }
 
    .version-right-wrap-main {
        position: absolute;
        top: 0px;
        left: 22px;
        z-index: 9;
        background: #fff;
    }
    i.angle.fe.fe-chevron-left.versionico{display:block !important;}
    .version-right-wrap-main {
        display: none;
    }
}
@@media only screen and (min-width:1301px) {
    .version-right-wrap-main {
        display: block !important;
    }
}  
 .version-left-panel.active {
    border :1px solid #05a087 ;
}
  .strikethrough {
            text-decoration: line-through;
             color: red;
        }
 
    .version-tab {
        position: relative;
    }
 
    i.angle.fe.fe-chevron-left.versionico {
        color: #fff;
        position: absolute;
        font-size: 24px;
        right: 9px;
        width: 41px !important;
        top: 0px;
        display: none;
        background: #04927b;
        padding: 10px 0px !important;
        z-index: 9999;
        text-align: center;
    }
 .table-responsive{
     min-height:0px !important;
 }
 
    .line-strike {
        text-decoration: line-through;
    }
 
    .version-left {
        border-radius: 5px;
        border: 1px solid #E7E9EB;
        background: #F9FAFB;
        margin: 20px;
    }
 
        .version-left h3 {
            color: var(--Ink-Darkest, #090A0A);
            font-family: Mont;
            font-size: 24px;
            font-style: normal;
            font-weight: 700;
            line-height: 36px; /* 150% */
            padding: 13px 20px 0px 20px;
        }
 
    .version-top {
        padding: 0px 20px 10px 20px;
    }
 
    html body .version-top .input-group {
        border-radius: 5px;
        border: 1px solid #E7E9EB;
        background: #FFF;
        box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.02);
        position: relative;
        height: 38px !important;
    }
 
    .version-top .input-group span {
        position: absolute;
        right: 0px;
    }
 
    span.input-group-addon {
        z-index: 9;
        border: 1px solid #ccc !important;
        border-top-right-radius: 5px !important;
        border-bottom-right-radius: 5px !important;
        border-top-left-radius: 0px !important;
        border-bottom-left-radius: 0px !important;
        height: 40px !important;
        border-left: 0px !important;
        line-height: 44px;
    }
 
    html body .version-top .input-group input {
        height: 38px !important;
        border: 1px solid #ccc !important;
        border-top-left-radius: 5px !important;
        border-bottom-left-radius: 5px !important;
    }
 
    .version-bottom .accordion .accordion-header button {
        color: var(--Ink-Darkest, #090A0A);
        font-family: Mont;
        font-size: 16px;
        font-style: normal;
        font-weight: 700;
        line-height: 16px; /* 100% */
        background: #f8f9f9;
        border-radius: 0px !important;
        border: 0px !important;
        box-shadow: inherit !important;
    }
 
    body .version-bottom .accordion .accordion-header {
        border: 0px !important;
    }
 
    .version-bottom .accordion-item {
        border: 0px !important;
    }
 
    .version-bottom .accordion-body {
        padding: 0px !important;
        border: 0px !important;
    }
 
    .version-left-panel {
        display: flex;
        padding: 13px;
        justify-content: space-between;
        align-items: center;
    }
 
    .version-left-side {
        display: flex;
    }
 
    .version-left-panel .version-lft-cont {
        display: flex;
        flex-direction: column;
        margin-left: 12px;
        align-self: center;
    }
 
    .version-left-side img {
        object-fit: contain;
    }
 
    .version-left-panel .version-lft-cont label {
        color: var(--Ink-Darkest, #090A0A);
        font-family: 'Mont';
        font-size: 15px;
        font-style: normal;
        font-weight: 400;
        line-height: 14px; /* 93.333% */
        padding-bottom: 7px;
    }
 
    .version-left-panel .version-lft-cont span {
        color: #6C7072;
        font-family: 'Mont';
        font-size: 14px;
        font-style: normal;
        font-weight: 400;
        line-height: 14px; /* 100% */
    }
 
    .version-right-side span {
        color: var(--Ink-Light, #6C7072);
        text-align: right;
        font-family: Mont;
        font-size: 14px;
        font-style: normal;
        font-weight: 600;
        line-height: 16px; /* 114.286% */
    }
 
    .version-left-list > div:nth-child(2n) {
        background: #E5EDF5 !important;
    }
 
 
    .version-right-wrap {
        border-radius: 5px;
        border: 1px solid #E7E9EB;
        margin: 20px 20px 20px 0px;
    }
 
    .version-right-top-section .version-left-panel {
        border: 1px solid #F3F3F3;
        background: #fff;
    }
 
    .version-edited-list {
        border-radius: 5px;
        border: 1px solid #F3F3F3;
        background: #F9FAFB;
        margin: 10px 20px;
        padding: 10px 0px;
    }
 
    .version-right-bottom-section {
        background: #fff;
    }
  .table-responsive {
    overflow-x: visible;
 
}
.collapse {
  
    visibility: visible;
}
    .version-edited-list > div {
        padding: 5px;
    }
 
        .version-edited-list > div ul {
            display: flex;
            justify-content: space-around;
            margin-left: 0px !important;
            padding-left: 0px !important;
        }
 
            .version-edited-list > div ul li label {
                color: #090A0A;
                font-family: 'Mont';
                font-size: 15px;
                font-style: normal;
                font-weight: 400;
            }
 
            .version-edited-list > div ul li span {
                color: #6C7072;
                font-family: 'Mont';
                font-size: 15px;
                font-style: normal;
                font-weight: 500;
                line-height: 30px;
            }
 
    .version-edited-list table thead tr th {
        color: #090A0A;
        font-family: 'Mont';
        font-size: 14px !important;
        font-style: normal;
        font-weight: 400;
        white-space: nowrap;
        padding: 0px 13px;
        padding-bottom: 10px !important;
    }
 
    .version-edited-list table tbody tr td {
        color: #6C7072;
        font-family: 'Mont';
        font-size: 14px !important;
        font-style: normal;
        font-weight: 500;
        line-height: 30px;
        padding: 0px 13px;
        white-space: nowrap;
    }
 
        .version-edited-list table tbody tr td b {
            color: #389721;
            font-family: 'Mont-bold';
        }
 
        .version-edited-list table tbody tr td:last-child {
            white-space: normal;
            min-width: 300px;
        }
 
    .version-right-bottom-section table.table {
        table-layout: auto;
    }
 
        .version-right-bottom-section table.table tbody tr td, .version-right-bottom-section table.table thead tr th {
            border: 0px !important;
        }
 
    a.edited-head {
        color: #F39C12;
    }
 
    a.created-head {
        color: #1092EF;
    }
 
    a.deleted-head {
        color: #CC0905;
    }
 
    a.version-title {
        font-family: Mont;
        font-size: 13px;
        font-style: normal;
        font-weight: 600;
        line-height: 24px;
        text-decoration: none;
        display: flex;
        align-items: center;
        margin-bottom: 0px !important;
        padding-bottom: 0px;
        padding-left: 21px;
        margin-top: 10px;
    }
 
        a.version-title svg {
            margin-right: 4px;
        }
 
    .version-left-list {
        height: 100%;
        overflow: auto;
    }
 
        .version-left-list::-webkit-scrollbar {
            width: 4px;
        }
    /*version style*/
    </style>

    <div class="version-tab row">
         <i class="angle fe fe-chevron-left versionico"></i>
         <div class="col-sm-3">
             <div class="version-left">
                 <h3>Version History (UTC)</h3>
                  <div class="version-top" style="display:none">
                      <div class="input-group prefix">
                           <span class="input-group-addon">
                           <i class="material-icons">search</i>
                           </span>
                        <input type="text" class="form-control dt-global-search" placeholder="Search...">
                      </div>
                  </div>
                  <div class="version-bottom">
                        <div class="accordion" id="accordionExample">
  
                        </div>
                  </div>
              </div>
             </div>
             <div class="col-sm-9 version-right-wrap-main">
                 <div class="version-right-wrap">
                     <div class="version-right-top-section">
                          <div class="version-left-panel">
                           <div class="version-left-side"><img id="userid" width="45px" height="45px" src="~/Icon_set/User.png" alt="user"/>
                              <div class="version-lft-cont">
                                  <label id="clicked_user"></label>
                                  <span id="clicked_actions"></span>
                               </div>
                           </div>
                           <div class="version-right-side"><span id="clicked_date_time"></span></div>
                           </div>
                     </div>
                     <div class="version-right-bottom-section" id="auditlogs">
                          
                           
                     </div>
                 </div>
             </div>
         </div>
   <!--version-->
 <script>
       
      function getPreviousItem(data,id, actiondatewithtime) {
                var previousItem = null;
                $.each(data, function(index, item) {
                    if (item.id === id && item.actiondatewithtime < actiondatewithtime) {
                        previousItem = item;
                    }
                });
                return previousItem;
            }
    function fill_audit_logs(data) {

        var desiredAttributes = [];
            $.each(data[0], function (key, value) {
                if (key !== "actionby" && key !== "actiondatewithtime" && key !== "actiondate" && key !== "actiontime" && key !== "profilepicture") {
                    desiredAttributes.push(key);
                }
             });
var profilepicture = data[0].profilepicture != null ? "@Context.Session.GetString("JmeterPublishcloudpath")" + "/" + data[0].profilepicture + "@Context.Session.GetString("JmeterPublishSAStoken")" : "../Icon_set/User.png";
   $('#userid').attr('src',profilepicture.replace(/&amp;/g, '&'));
         // Extract distinct dates
var distinctDates = [...new Set(data.map(item => item.actiondate))];

// Sort distinct dates in descending order
distinctDates.sort((a, b) => new Date(b) - new Date(a));


var dateandusersactions=''

        // Loop through distinct dates
        distinctDates.forEach(date => {
          // Filter data for the current date
          var filteredData = data.filter(item => item.actiondate === date);

          /// Sort data by actiondatewithtime in descending order
        filteredData.sort((a, b) => new Date(b.actiondatewithtime) - new Date(a.actiondatewithtime));


           var actiondate= date.replace(/\//g, '')
          var dateandusersactions=''
           

          // Get distinct actionby values for the current date
          var distinctActionBy = [...new Set(filteredData.map(item => item.actionby))];
                    var dateandusersactions=''
                  // Loop through distinct actionby values
                  distinctActionBy.forEach(actionBy => {
                            // Filter data for the current actionby
                            var filteredDataByActionBy = filteredData.filter(item => item.actionby === actionBy);

                            // Get distinct actiontime values for the current actionby
                            var distinctActionTime = [...new Set(filteredDataByActionBy.map(item => item.actiontime))];

                            // Loop through distinct actiontime values
                            distinctActionTime.forEach(actionTime => {
   
                            // Filter data for the current actiontime
                            var filteredDataByActionTime = filteredDataByActionBy.filter(item => item.actiontime === actionTime);

                            dateandusersactions+=`
                            <div class="version-left-panel">
                                <div class="version-left-side"><img  src="${profilepicture}" width="45px" height="45px" alt="profile"/>
                                    <div class="version-lft-cont">
                                        <label>${actionBy}</label>
                                        <span>${filteredDataByActionTime.length} Action(s)</span>
                                    </div>
                                </div>
                                <div class="version-right-side"><span>${actionTime}</span>
                                </div>
                                <div class="hiddendate" style="display:none;"><span>${date}</span>
                                </div>
                            </div>`

                              // Append accordion item for the current date, actionby, and actiontime
                              console.log(`collapse${date.replace(/\//g, '')}${actionBy}${actionTime}`, `${date} - ${actionBy} - ${actionTime}`, filteredDataByActionTime);
                            });
                  });

                    var dateandusers=`<div class="accordion-item">
                        <h2 class="accordion-header" id="heading${actiondate}">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse${actiondate}" aria-expanded="true" aria-controls="collapse${actiondate}">
                            ${date}
                            </button>
                        </h2>
                        <div id="collapse${actiondate}" class="accordion-collapse collapse show" aria-labelledby="heading${actiondate}" data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="version-left-list">
                                       ${dateandusersactions}
                                </div>
                            </div>
                        </div>
                    </div>`

                 $("#accordionExample").append(dateandusers)


                $('.version-left-panel').on('click', function() {

                    $('.version-left-panel').removeClass('active')

                     $(this).addClass('active')
                    $("#auditlogs").empty()
                // Find the version-right-side span elements within the clicked version-left-panel
                var versionRightSideSpans = $(this).find('.version-right-side span');
                // Get the time value
                var clickedTime = $(versionRightSideSpans).text();
                

                // Get the actionby value
                  var clickedUser = $(this).find('.version-lft-cont label').text();
                  var clickedDate = $(this).find('.hiddendate span').text();


                var recordsByDateTimeUser = data.filter(item => 
                item.actiondate === clickedDate && 
                item.actiontime === clickedTime && 
                item.actionby === clickedUser
                );
    

                // Filter the data array to find records with the specified time
                
                var clicked_user=recordsByDateTimeUser[0]['actionby']
                var clicked_actions=recordsByDateTimeUser.length +' Actions'
                var clicked_date_time=recordsByDateTimeUser[0]['actiondate'] +' | '+recordsByDateTimeUser[0]['actiontime']

                $("#clicked_user").text(clicked_user)
                $("#clicked_actions").text(clicked_user)
                $("#clicked_date_time").text(clicked_date_time)
                debugger;

                var table_header =  '<table class="table align-middle"><tr>';
                $.each(desiredAttributes, function(i, header) {
                table_header+='<th>' + header + '</th>';
                });
               table_header+='</tr>';
                 
               var tr_table_added=''
               var tr_table_updated=''
               var tr_table_deleted=''

               // Define the actions you want to filter by
var actions = ['Added', 'updated', 'Deleted'];

// Initialize arrays for each action
var added = [];
var updated = [];
var deleted = [];

// Loop through the data array
recordsByDateTimeUser.forEach(function(item) {
  // Check if the item's action is in the actions array
  if (actions.includes(item.action)) {
    // Push the item to the corresponding array
    switch (item.action) {
      case 'Added':
        added.push(item);
        break;
      case 'updated':
        updated.push(item);
        break;
      case 'Deleted':
        deleted.push(item);
        break;
    }
  }
});

   

               if(added.length >0){
                        $.each(added, function(index, item) {
	                           tr_table_added+='<tr>';
                      
	                        $.each(desiredAttributes, function(i, key) {
		                        var previousItem = getPreviousItem(data,item.id, item.actiondatewithtime);
		                       /* if (previousItem && previousItem[key] !== item[key]) {
			                        tr_table_added+=('<td class="changed">' + item[key] + '<br><span class="strikethrough">' + previousItem[key] + '</span></td>');
		                        } else {*/
			                        tr_table_added+=('<td>' + item[key] + '</td>');
		                       /* }*/
	                        });
	                           tr_table_added+='</tr>';
                       
                        });
                            var table_added=table_header+tr_table_added;
                            var table_version_added=`<div class="version-wrapper">
                                    <div class="col-sm-12">
                                    <a class="created-head version-title"><svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16" fill="none">
                                    <path d="M7.5 14.25C10.9375 14.25 13.75 11.4375 13.75 8C13.75 4.5625 10.9375 1.75 7.5 1.75C4.0625 1.75 1.25 4.5625 1.25 8C1.25 11.4375 4.0625 14.25 7.5 14.25Z" stroke="#1092EF" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M5 8H10" stroke="#1092EF" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M7.5 10.5V5.5" stroke="#1092EF" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>Created</a>
                                    </div>
	                                    <div class="version-created-list">

			                                    <div class="card-head-list">
					                                    <div class="table-responsive">`
							                                     table_version_added+=table_added+'</table>';
					                                    table_version_added+=`</div>
			                                    </div>
             
	                                    </div>
                                    </div>`
                                     $("#auditlogs").append(table_version_added);


                }

                   if(updated.length >0){

                 $.each(updated, function(index, item) {
	                   
                       tr_table_updated+='<tr>';
                       
	                $.each(desiredAttributes, function(i, key) {
		                var previousItem = getPreviousItem(data,item.id, item.actiondatewithtime);
		                if (previousItem && previousItem[key] !== item[key]) {
			                tr_table_updated+=('<td class="changed">' + item[key] + '<br><span class="strikethrough">' + previousItem[key] + '</span></td>');
		                } else {
			                tr_table_updated+=('<td>' + item[key] + '</td>');
		                }
	                });
	                  
                       tr_table_updated+='</tr>';
                       
                });

                 var table_updated=table_header+tr_table_updated;

                   var table_version_updated=`<div class="version-wrapper">
                    <div class="col-sm-12">
                    <a class="edited-head version-title"><svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16" fill="none">
                    <path d="M8.28759 2.74318L3.15634 8.17443C2.96259 8.38068 2.77509 8.78693 2.73759 9.06818L2.50634 11.0932C2.42509 11.8244 2.95009 12.3244 3.67509 12.1994L5.68759 11.8557C5.96884 11.8057 6.36259 11.5994 6.55634 11.3869L11.6876 5.95568C12.5751 5.01818 12.9751 3.94943 11.5938 2.64318C10.2188 1.34943 9.17509 1.80568 8.28759 2.74318Z" stroke="#F39C12" stroke-width="1.2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M7.43164 3.65625C7.70039 5.38125 9.10039 6.7 10.8379 6.875" stroke="#F39C12" stroke-width="1.2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M1.875 14.25H13.125" stroke="#F39C12" stroke-width="1.2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>Edited</a>
                    </div>
	                <div class="version-edited-lis">

			                <div class="card-head-list">
					                <div class="table-responsive">`
							                    table_version_updated+=table_updated+'</table>';
					                table_version_updated+=`</div>
			                </div>
             
	                </div>
                </div>`
                  $("#auditlogs").append(table_version_updated);


                }

                if(deleted.length >0){

                 $.each(deleted, function(index, item) {
	                   
                       tr_table_deleted+='<tr>';
	                $.each(desiredAttributes, function(i, key) {
		                var previousItem = getPreviousItem(data,item.id, item.actiondatewithtime);
		               /* if (previousItem && previousItem[key] !== item[key]) {
			                tr_table_deleted+=('<td class="changed">' + item[key] + '<br><span class="strikethrough">' + previousItem[key] + '</span></td>');
		                } else {*/
			                tr_table_deleted+=('<td>' + item[key] + '</td>');
		                /*}*/
	                });
	                  
                       tr_table_deleted+='</tr>';
                });

                 
                var table_deleted=table_header+tr_table_deleted;
           
               

                  
                 var table_version_deleted=`<div class="version-wrapper">
                    <div class="col-sm-12">
                    <a class="deleted-head version-title"><svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16" fill="none">
                    <path d="M13.125 4.23438C11.0438 4.02812 8.95 3.92188 6.8625 3.92188C5.625 3.92188 4.3875 3.98438 3.15 4.10938L1.875 4.23438" stroke="#CC0905" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M5.3125 3.60625L5.45 2.7875C5.55 2.19375 5.625 1.75 6.68125 1.75H8.31875C9.375 1.75 9.45625 2.21875 9.55 2.79375L9.6875 3.60625" stroke="#CC0905" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M11.7812 6.21094L11.375 12.5047C11.3062 13.4859 11.25 14.2484 9.50625 14.2484H5.49375C3.75 14.2484 3.69375 13.4859 3.625 12.5047L3.21875 6.21094" stroke="#CC0905" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M6.45605 10.8125H8.5373" stroke="#CC0905" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M5.9375 8.3125H9.0625" stroke="#CC0905" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>Deleted</a>
                    </div>
	                <div class="version-deleted-list">

			                <div class="card-head-list">
					                <div class="table-responsive">`
							                    table_version_deleted+=table_deleted+'</table>';
					                table_version_deleted+=`</div>
			                </div>
             
	                </div>
                </div>`
                
               
                  $("#auditlogs").append(table_version_deleted);


                }
              

               
                
 
                });

                        //// Add click event listener to time elements
                        //$('.version-right-side span').on('click', function() {
                        //// Get the time value
                        //var time = $(this).text();
                        //alert(time)
                        //// Toggle visibility of actions for the clicked time
                        //$('.version-right-side span').each(function() {
                        //    if ($(this).text() === time) {
                        //    $(this).closest('.version-left-panel').toggleClass('active');
                        //    }
                        //});
                        //});
        });
        // Find all elements with the specified class
var elements = $('.version-left-panel');

// Select the first element in the collection
var firstElement = elements.first();

// Trigger a click event on the first element
firstElement.click();

     }

</script>


<script>
function fill_users_view_data() {

        var usersid = getUrlVars()["id"];
        console.log("RequistID:" + usersid)
       
        $.ajax({
            url: '@Url.Action("getById_allinfo_users")',
            dataType: 'json',
            data: { usersid: usersid },
            success: function (data) {

                var obj = eval(data[0]);
                for (var key in obj) {

                    $(".auto_cls_" + key).html(obj[key]);

                    if(key=='automaton_users_alloweddevices_history' && getUrlVars()["section"] == 'automaton_users_alloweddevices_history'){
																	   if(obj[key]!=null && obj[key] !=""){
                                                                             data=obj[key]
                                                                            fill_audit_logs(JSON.parse(data))
                                                                        } 
																}

        }


    
}

        })
        
        

    }
    $(document).ready(function() {

    fill_users_view_data();


});
</script > 
