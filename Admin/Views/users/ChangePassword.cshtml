
<!--This code generated from staging Powered by Mahat, Source Machine : stg , Build Number : #2024-07-004 (Updated on 07/07/2024 22:07) on 06/12/2025 10:05:51 -->
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@using Admin;
@model JmeterPublish.Models.usersChangePasswordModel
@{
ViewData["Title"] = "Change Password";

Layout = "~/Views/Shared/_Layout.cshtml";

}

@using(Html.BeginForm("ChangePassword", "users", FormMethod.Post, new { enctype="multipart/form-data", @id = "formId"}))
{

<div class="card card-block contCard"><!--Form_Main_Card-->
	<div class="mobileHeader"><!--form_card_header-->
		<div class="row">
			<div class="col-sm-12 col-xs-12">
				<h4 class="formHdr">ChangePassword</h4>
			</div>
		</div>
	</div><!--form_card_header-->
	<!--form_error_display-->
	@if(ViewData["message"] != null)
	{
	<div class="row">
	<div class="col-sm-12 col-xs-12">
	<div class="alert alert-danger alert-dismissible ">
	<button type="button" class="close" data-dismiss="alert" aria-label="Close">
	<span aria-hidden="true">x</span>
	</button>
	Info :  @ViewData["message"]
	</div>
	</div>
	</div>
	}
	
	
	 
	
	<!--form_error_display-->
	<div class=""><!--form_inner_card-->
		<div class="card-block"><!--form_inner_card_block-->
			@Html.HiddenFor(m => m.usersid)
			 <input type="hidden" id="passwordstrenth" name="passwordstrenth"/>
			 

		 
			<div class="row"><!--field_container_row-->
				<!--fieldsStartsHere-->
					
				 
	<div class="col-sm-6 p-2 userpassword_craftmyapp_container">
			<div>
					<div class="form-group form-group--float-above my-3"> 
							<label for="userpassword">User Password <b class="iconRed">*</b></label>   <a class="help-block-orange" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
							  Tip
							</a>
					
							@Html.TextBoxFor(m => m.userpassword, new {@type="password",@minlength="8",@maxlength="30", @class = "form-control form-control-lg required" })

							 
						</div>
						<span class="field-validation-valid" data-valmsg-for="userpassword" data-valmsg-replace="true"></span>
						<div id="userpassword-error" class="help-block" style="display: none" role="alert"></div>
							<div class="collapse mt-2 help-block-orange" id="collapseExample">
							<ul>
								<li>Your password must be between 8 and 30 characters</li>
								<li>Your password must contain at least one uppercase, or capital, letter (ex: A, B, etc.) </li>
								<li>Your password must contain at least one lowercase, or small, letter (ex: a, b, etc.) </li>
								<li>Your password must contain at least one number digit (ex: 0, 1, 2, 3, etc.)</li>
								<li>Your password must contain at least one special character (ex:$, #, @@, !, etc.)</li>
							</ul>
							</div>
					
			</div>
		</div>

		<div class="col-sm-6 p-2">
						<div>
							<div class="form-group form-group--float-above my-3"> 
								<label for="userpasswordConfirm">Confirm Password <b class="iconRed">*</b></label>
								<input type="password" name="userpasswordConfirm" id="userpasswordConfirm" maxlength="128" class = "form-control form-control-lg required"/>
								<i class="form-group__bar" ></i>
								
							</div>
							
							<div id="userpasswordConfirm-error" class="help-block" style="display: none" role="alert"></div>
						</div>
		 </div>


				<!--fieldsEndsHere-->	
			</div><!--field_container_row-->


			<div class="card-block"><!--form_button_card_block-->
				<button type="button" onclick="window.history.back()"  class="btn btn-secondary cma_cancel_button waves-effect">@Resource.cancel</button>
				<button type="button" id="btnSubmit" class="btn btn-blue cma_primary_button waves-effect pull-right">ChangePassword</button>
			</div><!--form_button_card_block-->


		</div><!--form_inner_card_block-->
	</div><!--form_inner_card-->
</div><!--Form_Main_Card-->

}<!--EndFORM-->



 
 

<script src="~/components/jquery/passwordStrength.js"></script>
<script>
$(document).ready(function () {
$("#userpassword").val("") 
var obj = $('#userpassword').passwordStrength(
// {gradeClass: {
//     bad: 'bg-blue',
//     pass: 'bg-blue',
//     good: 'bg-blue'
// }}
);

                $.validator.addMethod("invalidphone", function (value, element) {
                if (value == 'invalid') {
                return false;
                }
                return true;
                }, "Please enter valid value");

                                        $('#formId').validate({
                                        ignore: ":hidden:not(.invalidphone)",
                                        highlight: function(element) {
                                        $(element).closest('.form-group').addClass('has-error');
                                        $(element).closest('.form-group').removeClass('has-success');
                                        $(element).addClass('form-control-error');
                                        $(element).removeClass('form-control-success');
                                        },
                                        unhighlight: function(element) {
                                        $(element).closest('.form-group').removeClass('has-error');
                                        $(element).closest('.form-group').addClass('has-success');
                                        $(element).addClass('form-control-success');
                                        $(element).removeClass('form-control-error');
                                        },
                                        errorElement: 'span',
                                        errorClass: 'help-block',
                                        errorPlacement: function (error, element) {
                                                    if (element.hasClass("invalidphone")) {
                                                        error.addClass("invalidphoneerror");
                                                        error.insertAfter(element);
                                                    } else {
                                                        error.insertAfter(element);
                                                    }
                                                }
                                        });

var validator = $("#formId").validate({ /* settings */ });

$("#btnSubmit").click(function(){

if ($("#formId").valid()){

if($("#passwordstrenth").val() !="100"){

				swal({
						title: "Validation Error !!",
						text: "Password is not strong",

						type: "error",
						showCancelButton: false,
						confirmButtonText: "OK",
					})

					return;

}


if($("#userpassword").val() !=$("#userpasswordConfirm").val())
{
	swal({
title: 'Validation !',
text: "Enter Confirm Password Same as Password",
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
		})

$("#userpasswordConfirm").focus()
$(".page-loader").hide()
return;

}

$(".page-loader").show()

var form = $('#formId')[0];
var formdata = new FormData(form);

$.ajax({
url: '@Url.Action("ChangePassword")',
type:'POST',
enctype: 'multipart/form-data',
processData: false,   
contentType: false,
cache: false,
data: formdata,
success: function(data) {

$(".page-loader").hide();
if(data=="Success"){
$(".page-loader").hide();
var Actions_=getAutho("users","list")
if(Actions_ !=  undefined)
{
var list_URL = "@Url.Action("logout", "users")"


window.location=list_URL;

}

}
else {
					$(".page-loader").hide();
					swal({
						title: "Error !!",
						text: data,

						type: "error",
						showCancelButton: false,
						confirmButtonText: "OK",
					})


				}


},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})




}else{
validator.focusInvalid();
swal({
title: 'Validation Failed !',
text: "Please check your entry",
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
})
}
})
})


</script>

