
			<!-- This code generated from staging Powered by Mahat, Source Machine : stg , Build Number : #2024-07-004 (Updated on 07/07/2024 22:07) on 06/12/2025 10:05:42 -->
			@using Microsoft.AspNetCore.Http
@{
ViewData["Title"] = "List of  Lookup  Data";
Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card" style="margin-left:5px;padding:20px;">
<div class="card-body" style="padding:20px;padding-top:0px;">
@if(TempData["message"] != null)
{
<div class="row">
<div class="col-sm-12 col-xs-12">
<div class="alert alert-success alert-dismissible fade show">
<button type="button" class="close" data-dismiss="alert" aria-label="Close">
<span aria-hidden="true">x</span>
</button>
Info :  @TempData["message"]
</div>
</div>
</div>
}
	<div class="row" style="margin-bottom:20px"><div class="col-sm-12 col-xs-12">
	<div class="table-responsive" style="margin:0px;">
		<table id="lookups" class="table order-column hover responsive nowrap" width="100%" style="margin:0px; ">
			 <thead class="thead-default">
				<tr>
				<th>Entity Name</th>
				<th>Field Name</th>
				<th>Lookup Values</th>
				<th class="all">Action</th>

				</tr>
			</thead>
		<tbody></tbody>
			 
		</table>
	</div>

	</div></div>
	</div>
</div>

 
  
	<script type="text/javascript">
	$(document).ready(function () {
 
 
	var table=$("#lookups").DataTable({
	destroy:true,
	"bStateSave": true,
"order": [],
"aaSorting": [],
	autoWidth: !1,
	responsive:!0,
	lengthMenu: [
	[15, 30, 45, -1],
	["15 Rows", "30 Rows", "45 Rows", "Everything"]
	],
	language: {
	searchPlaceholder: "Search for records..."
	},
	 language: { search: '<i class="fa fa-search"></i>', searchPlaceholder: "Search for records..." },
	dom: "Bfrtip",
	   sDom: '<"dataTables__top"lfB>rt<"dataTables__bottom"ip><"clear">',
	buttons: [{
	extend: "excelHtml5",
	title: "List Of Lookup Data"
	}, {
	extend: "csvHtml5",
	title: "List Of Lookup Data"
	}, {
	extend: "print",
	title: "List Of Lookup Data"
	}],
 initComplete: function(a, b) {
      $(this).closest(".dataTables_wrapper").find(".dt-buttons").hide();
       $(this).closest(".dataTables_wrapper").find(".dataTables__top").prepend(`
        <div class="dataTables_buttons hidden-sm-down actions">
          <i class="actions__item mdi material-icons" data-table-action="fullscreen">fullscreen</i>
          <div class="dropdown actions__item">
            <i data-toggle="dropdown" class="material-icons">share</i>
            <ul class="dropdown-menu dropdown-menu-right">
              <a href="javascript: void 0" class="dropdown-item" data-table-action="excel">Excel (.xlsx)</a>
              <a href="javascript: void 0" class="dropdown-item" data-table-action="csv">CSV (.csv)</a>
              <a href="javascript: void 0" class="dropdown-item" data-table-action="print">Print</a>
            </ul>
          </div>`)

 

    },columns: [
{ data: 'entityname' },
{ data: 'fieldname' },
{ data: 'fielddesc' },
{
		"sName": "lookupid",
		"bSearchable": false,
		"bSortable": false,
		data: 'lookupid', "className": "dt-center",
		mRender: function(data, type, row) {
var returnButton="";
				var CreateURL = "@Url.Action("Create", "lookups")?id=" + row["lookupid"]
			 
			 returnButton=returnButton+ '<div class="dropdown actions__item">' +
'<i data-toggle="dropdown" class="fa fa-ellipsis-v"></i>' +
'<div class="dropdown-menu dropdown-menu-right">';
returnButton=returnButton+'<a href="' + CreateURL + '" class="dropdown-item">Change</a>'
 

returnButton=returnButton+'</div></div>'
return returnButton
		}
		}

	 ],
	ajax: {
	url: "@Url.Action("get_lookups", "lookups")",
	type: 'GET',
	dataType: 'json',
	dataSrc: '',
	error: function(jqXHR, textStatus, errorThrown) {
	if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
	{
	swal({
	title: 'Failed!',
	text: jqXHR.responseText,
	type: 'error',
	buttonsStyling: false,
	confirmButtonClass: 'btn btn-primary',
	allowOutsideClick: false
	}).then(function() {
	window.location = "@Url.Action("AuthorizationFailed", "users")"
	}) 
	}
	else
	{
		swal({
		title: 'Contact Administrator !',
		text: jqXHR.responseText,
		type: 'error',
		buttonsStyling: false,
		confirmButtonClass: 'btn btn-primary'
		}) 
	}
	}
	}
	})

   $('.ColVis_collection li').on('click', function(event) {
    event.stopPropagation();
  });

  $('.colvis_switch').on('change', function(e) {
    var column = dataTable.column($(this).attr('data-column'));
    column.visible(!column.visible());
  });

  $(".dataTables_filter input[type=search]").focus(function() {
    $(this).closest(".dataTables_filter").addClass("dataTables_filter--toggled")
  }), $(".dataTables_filter input[type=search]").blur(function() {
    $(this).closest(".dataTables_filter").removeClass("dataTables_filter--toggled")
  })

  $("body").on("click", "[data-table-action]", function(a) {
    a.preventDefault();
    var b = $(this).data("table-action");
    console.log('dataTables_wrapper', $(this).closest(".dataTables_wrapper").find(".buttons-print"));
    if ("excel" === b && $(this).closest(".dataTables_wrapper").find(".buttons-excel").trigger("click"), "csv" === b && $(this).closest(".dataTables_wrapper").find(".buttons-csv").trigger("click"), "print" === b && $(this).closest(".dataTables_wrapper").find(".buttons-print").trigger("click"), "fullscreen" === b) {
      var c = $(this).closest(".card");
      c.hasClass("card--fullscreen") ? (c.removeClass("card--fullscreen"), $("body").removeClass("data-table-toggled")) : (c.addClass("card--fullscreen"), $("body").addClass("data-table-toggled"))
    }
  });   
 
});
</script>




