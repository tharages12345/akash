
			<!-- This code generated from staging Powered by Mahat, Source Machine : stg , Build Number : #2024-07-004 (Updated on 07/07/2024 22:07) on 06/12/2025 10:06:00 -->
			@using Microsoft.AspNetCore.Http
			@inject IHttpContextAccessor HttpContextAccessor
            @using Admin;
			@model JmeterPublish.Models.MailLogsModel
			@{
			ViewData["Title"] = @Resource.updatemaillog;

			Layout = "~/Views/Shared/_Layout.cshtml";
			
			}

			@using(Html.BeginForm("Update_MailLog", "MailLogs", FormMethod.Post, new { enctype="multipart/form-data", @id = "formId"}))
			{

			<div class="card card-block contCard"><!--Form_Main_Card-->
				<div class="mobileHeader"><!--form_card_header-->
					<div class="row">
						<div class="col-sm-12 col-xs-12">
							<h4 class="formHdr">@Resource.updatemaillog</h4>
						</div>
					</div>
				</div><!--form_card_header-->
				<!--form_error_display-->
				@if(ViewData["message"] != null)
				{
				<div class="row">
				<div class="col-sm-12 col-xs-12">
				<div class="alert alert-danger alert-dismissible ">
				<button type="button" class="close" data-dismiss="alert" aria-label="Close">
				<span aria-hidden="true">x</span>
				</button>
				Info :  @ViewData["message"]
				</div>
				</div>
				</div>
				}
				
				
				 
				
				<!--form_error_display-->
				<div class=""><!--form_inner_card-->
					<div class="card-block"><!--form_inner_card_block-->
					    @Html.HiddenFor(m => m.MailLogsid)
                            
						 

						
						<div class="row"><!--field_container_row-->
							<!--fieldsStartsHere-->
						       		
								<div class="col-sm-3 col-xs-12 p-2 entityname_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="entityname">@Resource.maillogs_entityname <b class="iconRed">*</b></label>
                                @Html.TextBoxFor(m => m.entityname, new {@type="text",@maxlength="128", @class = "form-control form-control-lg mahat_transliterate required" })

							     @Html.ValidationMessageFor(model => model.entityname)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 entityid_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="entityid">@Resource.maillogs_entityid</label>
                                @Html.TextBoxFor(m => m.entityid, new {@type="text",@maxlength="128", @class = "form-control form-control-lg mahat_transliterate " })

							     @Html.ValidationMessageFor(model => model.entityid)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 mailfor_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="mailfor">@Resource.maillogs_mailfor</label>
                                @Html.TextBoxFor(m => m.mailfor, new {@type="text",@maxlength="256", @class = "form-control form-control-lg mahat_transliterate " })

							     @Html.ValidationMessageFor(model => model.mailfor)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 mailsubject_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="mailsubject">@Resource.maillogs_mailsubject</label>
                                @Html.TextBoxFor(m => m.mailsubject, new {@type="text",@maxlength="256", @class = "form-control form-control-lg mahat_transliterate " })

							     @Html.ValidationMessageFor(model => model.mailsubject)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 mailto_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="mailto">@Resource.maillogs_mailto</label>
                                @Html.TextBoxFor(m => m.mailto, new {@type="text",@maxlength="4096", @class = "form-control form-control-lg mahat_transliterate " })

							     @Html.ValidationMessageFor(model => model.mailto)
							</div>
						</div>
					</div>
<div class="col-sm-12 col-xs-12 p-2 mailbody_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label for="mailbody">@Resource.maillogs_mailbody</label>
															@Html.TextAreaFor(m => m.mailbody, new {@class = "form-control mahat_transliterate wysiwyg-editor " })

										<i class="form-group__bar" ></i>
									</div>
									@Html.ValidationMessageFor(model => model.mailbody)
									<div id="mailbody-error" class="help-block" style="display: none" role="alert"></div>
								</div>
							</div>
<div class="col-sm-3 col-xs-12 p-4 issent_craftmyapp_container">
							<div>

							<label for="issent">@Resource.maillogs_issent</label><br>
							<div class="form-group">
                                                        <div>
                                                          <label class="switch" for="issent">
                                                          @Html.CheckBoxFor(m => m.issent,new {@class = "" })
                                                           
                                                          <span class="slider round"></span>
                                                        </label>
                                                        </div>
                                                      </div>

							</div>
							</div>


							<!--fieldsEndsHere-->	
						</div><!--field_container_row-->


						<div class="card-block"><!--form_button_card_block-->
							<button type="button" onclick="window.history.back()"  class="btn btn-secondary cma_cancel_button waves-effect">@Resource.back</button>
							<button type="button" id="btnSubmit" class="btn cma_primary_button  cma_save_button waves-effect pull-right">@Resource.updatemaillog</button>
						</div><!--form_button_card_block-->


					</div><!--form_inner_card_block-->
				</div><!--form_inner_card-->
			</div><!--Form_Main_Card-->

			}<!--EndFORM-->


			
			 <!--from_cma_script-->
			 <script type="text/javascript">
				$(document).ready(function () {


				var Actions=getAutho("MailLogs","edit")
				if(Actions == undefined){
				window.location = "@Url.Action("RoleAuthorizationFailed", "users")"
				}


				});
				</script>
			
			<link href="~/components/trumbowyg/dist/ui/trumbowyg.css" rel="stylesheet" />
<script src="~/components/trumbowyg/dist/trumbowyg.js"></script>
<script>$('#mailbody').trumbowyg();</script>

			
			
			
			
			<script>
            
			
			
			</script>
			
  
 
                            <script>
                            var posturl='';
                            </script>

                             @if (Model == null)
                             {
	                             <script>
                                posturl = '@Url.Action("Create_MailLog")';
	                            </script>
                            }else{
	   
	                                <script>
                                                   posturl = '@Url.Action("Update_MailLog")';
			 
						                                  </script>    			              
                              
	 
							                            ViewData["Title"] = @Resource.updatemaillog;
						                                 <script>
                   
					                                 $("#btnSubmit").html("@Resource.updatemaillog")
						                                  </script>    
 
 
                            }

<script>
$(document).ready(function () {
	
	
           
                $.validator.addMethod("invalidphone", function (value, element) {
                if (value == 'invalid') {
                return false;
                }
                return true;
                }, "Please enter valid value");

                                        $('#formId').validate({
                                        ignore: ":hidden:not(.invalidphone)",
                                        highlight: function(element) {
                                        $(element).closest('.form-group').addClass('has-error');
                                        $(element).closest('.form-group').removeClass('has-success');
                                        $(element).addClass('form-control-error');
                                        $(element).removeClass('form-control-success');
                                        },
                                        unhighlight: function(element) {
                                        $(element).closest('.form-group').removeClass('has-error');
                                        $(element).closest('.form-group').addClass('has-success');
                                        $(element).addClass('form-control-success');
                                        $(element).removeClass('form-control-error');
                                        },
                                        errorElement: 'span',
                                        errorClass: 'help-block',
                                        errorPlacement: function (error, element) {
                                                    if (element.hasClass("invalidphone")) {
                                                        error.addClass("invalidphoneerror");
                                                        error.insertAfter(element);
                                                    } else {
                                                        error.insertAfter(element);
                                                    }
                                                }
                                        });
 	 
var validator = $("#formId").validate({ /* settings */ });
 
$("#btnSubmit").click(function(){
 
 
 

 
 

if ($("#formId").valid()){
 $(".page-loader").show()
 
 var form = $('#formId')[0];
 var formdata = new FormData(form);

 

 
 
 
 

 
$.ajax({
url: posturl,
type:'POST',
enctype: 'multipart/form-data',
processData: false,   
contentType: false,
cache: false,
data: formdata,
success: function(data) {
  
  $(".page-loader").hide();
 if(data=="Success"){
 $(".page-loader").hide();

 	var Actions_=getAutho("MailLogs","list")
	if(Actions_ !=  undefined)
	{
		var list_URL = "@Url.Action("entry.viewname", "MailLogs")"
		                                                                list_URL = list_URL.replace("entry.viewname", Actions_.actionmethodname);
		                                                                window.location=list_URL;
	 
	}
   
 }
    else {
                                $(".page-loader").hide();
                                swal({
                                    title: "Error !!",
                                    text: data,

                                    type: "error",
                                    showCancelButton: false,
                                    confirmButtonText: "OK",
                                })


                            }

 
},
	error: function(jqXHR, textStatus, errorThrown) {
	if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
	{
	swal({
	title: 'Failed!',
	text: jqXHR.responseText,
	type: 'error',
	buttonsStyling: false,
	confirmButtonClass: 'btn btn-primary',
	allowOutsideClick: false
	}).then(function() {
	window.location = "@Url.Action("AuthorizationFailed", "users")"
	}) 
	}
	else
	{
	swal({
	title: 'Contact Administrator !',
	text: jqXHR.responseText,
	type: 'error',
	buttonsStyling: false,
	confirmButtonClass: 'btn btn-primary'
	}) 
	}
	}
})




}else{
validator.focusInvalid();
swal({
title: 'Validation Failed !',
text: "Please check your entry",
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
 })
}
})
})


</script>

			
			
            
            

			 
             
                


			 <!--to_cma_script-->
			




