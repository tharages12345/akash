
					<!--This code generated from staging Powered by Mahat, Source Machine : stg , Build Number : #2024-07-004 (Updated on 07/07/2024 22:07) on 06/12/2025 10:06:00 -->
					@using Microsoft.AspNetCore.Http
					@inject IHttpContextAccessor HttpContextAccessor
                    @using Admin;
					@model JmeterPublish.Models.MailLogsModel
					@{
					ViewData["Title"] = @Resource.maillogslist;
					Layout = "~/Views/Shared/_Layout.cshtml";
					}

					<div class="card " style="padding:20px;">
					<div class="mobileHeader"><!--form_card_header-->
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<h3 class="formHdr">@Resource.maillogslist</h3>
					</div>
					</div>
					</div><!--form_card_header-->
					<div class="card-body" style="padding:1px;padding-top:0px;">

					@if(TempData["errMessage"] != null)
					{
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<div class="alert alert-danger alert-dismissible ">
					<button type="button" class="close" data-dismiss="alert" aria-label="Close">
					<span aria-hidden="true">x</span>
					</button>
					Info :  @TempData["errMessage"]
					</div>
					</div>
					</div>
					}

					@if(TempData["message"] != null)
					{
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<div class="alert alert-success alert-dismissible ">
					<button type="button" class="close" data-dismiss="alert" aria-label="Close">
					<span aria-hidden="true">x</span>
					</button>
					Info :  @TempData["message"]
					</div>
					</div>
					</div>
					}

					<input type="hidden" id="MailLogsid" name="MailLogsid"/>
					<div class="row">
					<div class="col-sm-2 col-xs-12 p-2 entityname_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="entityname">@Resource.maillogs_entityname</label>
                                @Html.TextBoxFor(m => m.entityname, new {@type="text",@maxlength="128", @class = "form-control form-control-lg mahat_transliterate " })

							     @Html.ValidationMessageFor(model => model.entityname)
							</div>
						</div>
					</div>
<div class="col-sm-2 col-xs-12 p-2 mailfor_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label for="mailfor">@Resource.maillogs_mailfor</label>
                                @Html.TextBoxFor(m => m.mailfor, new {@type="text",@maxlength="256", @class = "form-control form-control-lg mahat_transliterate " })

							     @Html.ValidationMessageFor(model => model.mailfor)
							</div>
						</div>
					</div>
<div class="col-sm-2 p-2">

												<button id="btnFilter" class="btn btn-secondary btn--icon-text mt-5"><i class="fa fa-filter"></i> Filter</button>

												</div>

					</div>

					<div class="row"><div class="col-sm-12 col-xs-12">
					<div class="table-responsive" style="margin:0px;">
					<table id="tblMailLogs" class="table order-column hover responsive nowrap mahatTableWidthSetter" style="margin:0px; ">
					<thead class="thead-default">
					<tr>
                    
                    <th>@Resource.maillogs_entityname</th>
<th>@Resource.maillogs_entityid</th>
<th>@Resource.maillogs_mailfor</th>
<th>@Resource.maillogs_mailsubject</th>
<th>@Resource.maillogs_mailto</th>
<th>@Resource.maillogs_issent</th>

					<th class="all">Action</th>
					

					</tr>
					</thead>
					<tbody></tbody>
					
					</table>
					</div>

					</div>
					
					
					</div>
					
					</div>
					</div>
					
                    <link href="~/components/jquery-colorbox/colorbox.css" rel="stylesheet" />
                    <script src="~/components/jquery-colorbox/jquery.colorbox.js"></script>
                    <link href="~/css/GallaryContent/style.css" rel="stylesheet" />
                    <link href="~/components/starrr/starrr.css" rel="stylesheet" />
					
                     <script src="~/js/dtpager.js"></script>

					<script type="text/javascript">

                    var arr_selected_for_verification = [];

					function fill_MailLogs()
					{

                        var sendFilterData = {
			 					"entityname":$("#entityname").val(),
"mailfor":$("#mailfor").val(),

                                "pagesize": pageSize,
                                "pagenumber": (currentPageNumber - 1)
								}
						

					

					


					
         dataTableId="#tblMailLogs";
         reachedEOF = false;
         totalRecordsCount = 0;
         currentPageNumber = 1;
         fetchingDataFromApi = false;
    
        var pagerControlsTemplate = "<div id='pager_container' class='dataTables_paginate'>"
            + "<button type='button' id='pager_btn_previous' onClick='pager_gotoPreviousPage(this);' class='paginate_button previous'>Previous</button>"
            + "<span>Page <input type='number' id='pager_txt_currentpage' min='1' max='^MAXPAGE^' maxlength='10' size='10' onFocus='this.oldValue=this.value;' onChange='pager_gotoPage(this);'/> of <span id='pager_lbl_pagecount'></span></span>"
            + "<select id='pager_ddl_pagesize' onChange='pager_pageSizeChanged(this);'>"
            + "<option value='50' selected>50 rows</option>"
            + "<option value='100'>100 rows</option>"
            + "<option value='200'>200 rows</option>"
            + "<option value='500'>500 rows</option>"
            + "<option value='^Everything^'>Everything</option>"
            + "</select>"
            + "<button type='button' id='pager_btn_next' onClick='pager_gotoNextPage(this);' class='paginate_button next'>Next</button>"
            + "</div>";

    var table=$("#tblMailLogs").DataTable({
    columnDefs: [{ 
     targets: -1,
     title: '<i class="fa fa-pencil fa-lg"></i>'
  }],
    paging:false,
    destroy:true,
    serverSide: true,
    filter: true,
    "orderMulti": false,
    searchDelay: 2000,
    
	"order": [],"aaSorting": [],
 	autoWidth: !1,responsive:!0,
	language: {
	searchPlaceholder: "Search for records..."
	},
	 language: { search: '<i class="fa fa-search"></i>', searchPlaceholder: "Search for records..." },
	dom: "Bfrtip", sDom: '<"dataTables__top"lfB>rt<"dataTables__bottom"ip><"clear">',
  
	buttons: [{
	extend: "excelHtml5",
	title: "List Of MailLogs Data"
	}, {
	extend: "csvHtml5",
	title: "List Of MailLogs Data"
	}, {
	extend: "print",
	title: "List Of MailLogs Data"
	}],
 initComplete: function(a, b) {



      $(this).closest(".dataTables_wrapper").find(".dt-buttons").hide();
      
if ($('#btnFilter').length) {
     $(this).closest(".dataTables_wrapper").find(".dataTables__top").prepend(`
        <i class="automatonShowFilter actions__item mdi material-icons">filter_alt</i>
      `);
 }
var Actions=getAutho("MailLogs","create")
		if(Actions != undefined){
			var create_URL = "@Url.Action("entry.viewname", "MailLogs")"
		    create_URL = create_URL.replace("entry.viewname", Actions.actionmethodname);
            
            $(this).closest(".dataTables_wrapper").find(".dataTables__top").prepend(`    
       
        <div class="dataTables_buttons actions">
        <div class="input-group prefix">
	                        <span class="input-group-addon">
	                        <i class="material-icons">search</i>
	                        </span>
	                        <input type="text" class="form-control dt-global-search" placeholder="Search..." />
                        </div>
          <div class="dropdown actions__item cma_top_icon">
            <i data-toggle="dropdown" class="material-icons">share</i>
            <ul class="dropdown-menu dropdown-menu-right">
              <a href="javascript: void 0" class="dropdown-item" data-table-action="excel">Excel (.xlsx)</a>
              <a href="javascript: void 0" class="dropdown-item" data-table-action="csv">CSV (.csv)</a>
             
            </ul>
          </div>
         <div class="dropdown actions__item cma_top_icon">
                                    <i data-toggle="dropdown" class="material-icons">settings</i>
                                    <ul class="dropdown-menu dropdown-menu-right ColVis_collection">
                                    <li>
                                                                <label> @Resource.maillogs_entityname
 <input type="checkbox" class="colvis_switch" data-column="0" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_entityid
 <input type="checkbox" class="colvis_switch" data-column="1" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_mailfor
 <input type="checkbox" class="colvis_switch" data-column="2" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_mailsubject
 <input type="checkbox" class="colvis_switch" data-column="3" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_mailto
 <input type="checkbox" class="colvis_switch" data-column="4" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_issent
 <input type="checkbox" class="colvis_switch" data-column="5" checked /></label>
                                                              </li>
   
                                    </ul>
                                    </div>

         <a href="create_URL" class="btn btn-rounded add-row-btn cma_add_button">Add <span class="material-icons">add</span></a>
        </div>
      `.replace("create_URL", create_URL))
if ($(this).hasClass('make-active')) {
        $('tbody', $(this)).children('tr').first().addClass('active-row');
        setTimeout(() => {
          $('.active-row td:visible:last').addClass('last-active-td');
        }, 200);
      }
      $(this).closest(".dataTables_wrapper").find(".dt-global-search").on('keyup', function() {
        table.search(this.value).draw();
      });

        }
            else{
            $(this).closest(".dataTables_wrapper").find(".dataTables__top").prepend(` 
        
        
        <div class="dataTables_buttons actions">
         <div class="input-group prefix">
	                        <span class="input-group-addon">
	                        <i class="material-icons">search</i>
	                        </span>
	                        <input type="text" class="form-control dt-global-search" placeholder="Search..." />
                        </div>
          <div class="dropdown actions__item cma_top_icon">
            <i data-toggle="dropdown" class="material-icons">share</i>
            <ul class="dropdown-menu dropdown-menu-right">
              <a href="javascript: void 0" class="dropdown-item" data-table-action="excel">Excel (.xlsx)</a>
              <a href="javascript: void 0" class="dropdown-item" data-table-action="csv">CSV (.csv)</a>
             
            </ul>
          </div>
         <div class="dropdown actions__item cma_top_icon">
                                    <i data-toggle="dropdown" class="material-icons">settings</i>
                                    <ul class="dropdown-menu dropdown-menu-right ColVis_collection">
                                    <li>
                                                                <label> @Resource.maillogs_entityname
 <input type="checkbox" class="colvis_switch" data-column="0" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_entityid
 <input type="checkbox" class="colvis_switch" data-column="1" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_mailfor
 <input type="checkbox" class="colvis_switch" data-column="2" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_mailsubject
 <input type="checkbox" class="colvis_switch" data-column="3" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_mailto
 <input type="checkbox" class="colvis_switch" data-column="4" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.maillogs_issent
 <input type="checkbox" class="colvis_switch" data-column="5" checked /></label>
                                                              </li>
   
                                    </ul>
                                    </div>
        </div>
      `)
if ($(this).hasClass('make-active')) {
        $('tbody', $(this)).children('tr').first().addClass('active-row');
        setTimeout(() => {
          $('.active-row td:visible:last').addClass('last-active-td');
        }, 200);
      }
      $(this).closest(".dataTables_wrapper").find(".dt-global-search").on('keyup', function() {
        table.search(this.value).draw();
      });

        }

        $(dataTableId + '_info').parent().append(
                    pagerControlsTemplate.replace('^Everything^', totalRecordsCount).replace('^MAXPAGE^', pager_getPageCount())
                );
                //$(dataTableId + '_info').hide();
                $(pagerContainerId + ' #pager_lbl_pagecount').text(pager_getPageCount());
                pager_setCurrentPageNumber(1);
                pager_onPageChanged();

            

    }
	 ,columns: [
         
		{data: 'entityname'},
{data: 'entityid'},
{data: 'mailfor'},
{data: 'mailsubject'},
{data: 'mailto'},
{data: 'issent'},

		{
                    "sName": "maillogsid",
                    "bSearchable": false,
                    "bSortable": false,
                    data: 'maillogsid', "className": "dt-center",
                    mRender: function(data, type, row) {
                    var Actions=getAuthoController("MailLogs")
		            var appendMessage='';
                    if(Actions !=undefined)
                    {
                    for (var index = 0; index < Actions.length; ++index) {
                    var entry = Actions[index];
			 
                    if(entry.viewname !="list" && entry.viewname !="list_verify_approved" && entry.viewname !="list_verify" && entry.viewname !="create" && entry.viewname !="post" && entry.viewname !="getall" && entry.viewname !="get" && entry.viewname !="check_user" && entry.viewname !="change_password"){
                    var URL = "@Url.Action("entry.viewname", "MailLogs")?MailLogsid=" + row["maillogsid"]
                    URL = URL.replace("entry.viewname", entry.actionmethodname);
			 
                    if(entry.viewname=="delete")
                    {
	                    
	                    appendMessage+='<a href="' + URL + '" class="dropdown-item deleteRecordFromTable">'+entry.actiondisplayname+'</a>' 	
				   
				
                    }
                    
                      else if(entry.viewname=="detail")
            {
      var DETAIL_URL = "@Url.Action("entry.actionmethodname", "MailLogs")?MailLogsid=" + row["maillogsid"]
                    DETAIL_URL = DETAIL_URL.replace("entry.actionmethodname", entry.actionmethodname);
	                    appendMessage+='<a href="' + DETAIL_URL + '" class="dropdown-item">View</a>' 		

				
 }
                    else
                    {
                     
	                    appendMessage+='<a href="' + URL + '" class="dropdown-item">'+entry.actiondisplayname+'</a>' 
                    }
			 
                    }					 
						 
                    }
								
                    if(appendMessage =="")
                    {
                    return '-'

                    }
                    else
                    {
                    return '<div class="dropdown actions__item">' +
                    '<i data-toggle="dropdown" class="fa fa-ellipsis-h"></i>' +
                    '<div class="dropdown-menu dropdown-menu-right">' + appendMessage +
		 

                    '</div>' +
                    '</div>'
                    }



                    }
                    else
                    {
                    return '-'

                    }


                    }
                    }
	

	 ],

        ajax: function (data, callback, settings) {
        fetchingDataFromApi = true;
        sendFilterData.searchterm = data.search.value; 
        sendFilterData.pagesize = pageSize;    
        sendFilterData.pagenumber =  (currentPageNumber - 1);   
        var sortParams = [];
        for (var i = 0; i < data.order.length; i++) {
            var colIndex = data.order[i].column;
            var sortDirection = data.order[i].dir;
            var columnName = data.columns[colIndex].data;

            var sortParam = {};
            sortParam["col"] = columnName;
            sortParam["dir"] = sortDirection;

            sortParams.push(sortParam);
        }
        sendFilterData.sortFieldsJson =  JSON.stringify(sortParams);
        $.ajax({
        url: "@Url.Action("get_MailLogs_List", "MailLogs")",
        type: 'GET',
        dataType: 'json',
        data: sendFilterData,

        success: function(responsedata) {

                 fetchingDataFromApi = false;
                //to let grid say no data available and all other flows get through
                if (responsedata.detail == null) {
                    responsedata.detail = [];
                }
                totalRecordsCount = responsedata.count;
                if (responsedata.detail.length < pageSize) {
                    reachedEOF = true;
                }
        
                setTimeout(function () {
                callback({
                    data: responsedata.detail,
                    recordsTotal: responsedata.count
                  });
                }, 50);
        },
        error: function(jqXHR, textStatus, errorThrown) {
            fetchingDataFromApi = false;

            if (JSON.stringify(jqXHR.responseText) == "API Authorization failed") {
                    swal({
                    title: 'Failed!',
                    text: jqXHR.responseText,
                    type: 'error',
                    buttonsStyling: false,
                    confirmButtonClass: 'btn btn-primary',
                    allowOutsideClick: false
                    }).then(function() {
                    window.location = "@Url.Action("AuthorizationFailed", "users")"
                    })
            }
            else
            {
                    swal({
                    title: 'Contact Administrator !',
                    text: jqXHR.responseText,
                    type: 'error',
                    buttonsStyling: false,
                    confirmButtonClass: 'btn btn-primary'
                    })
            }
        }
        });
        },
        "infoCallback": function(settings, start, end, max, total, pre)
        {
                var startRowCount = (pageSize * currentPageNumber) - pageSize + 1;
                var endRowCount = $(dataTableId).DataTable().rows().count() + startRowCount - 1;
                var pagingInfo = 'Showing ' + startRowCount + ' to ' + endRowCount + ' of ' + totalRecordsCount + ' entries';

                return pagingInfo;
        }


})
     
	  
 $('body').on('click', '.ColVis_collection li', function(a) {
    event.stopPropagation();
  });
 
 $('body').on('change', '.colvis_switch', function(a) {
    var column = table.column($(this).attr('data-column'));
    column.visible(!column.visible());
  });


 

  
	 


	


							
					}
      function fill_pagination(callback) {
        if ((reachedEOF || fetchingDataFromApi) && currentPageNumber !=1) {
            return;
        }
        fetchingDataFromApi = true;
         var order = $(dataTableId).DataTable().order();
            var sortParams = [];

            for (var i = 0; i < order.length; i++) {
                var colIndex = order[i][0];
                var sortDirection = order[i][1];
                var columnName = $(dataTableId).DataTable().settings()[0].aoColumns[colIndex].data;

                var sortParam = {
                    col: columnName,
                    dir: sortDirection
                };

                sortParams.push(sortParam);
            }
            var sendFilterData = {
			 					"entityname":$("#entityname").val(),
"mailfor":$("#mailfor").val(),

                                "pagesize": pageSize,
                                "pagenumber": (currentPageNumber - 1)
								}
            sendFilterData.searchterm = $(".dt-global-search").val();
        sendFilterData.sortFieldsJson= JSON.stringify(sortParams);
        var currentPage = $(dataTableId).DataTable().page();
  
        $.ajax({
            url: "@Url.Action("get_MailLogs_List", "MailLogs")",
            type: 'GET',
            dataType: 'json',
            data: sendFilterData,
            success: function (responsedata) {
                if (responsedata != null && responsedata.detail.length > 0) {
                    if (responsedata.detail.length < pageSize) {
                        reachedEOF = true;
                    }

                    api_response_data = responsedata.detail;
                    var table = $(dataTableId).DataTable();
                    table.rows().remove();
                    table.rows.add(responsedata.detail).draw();
                }
                else {
                    reachedEOF = true;
                }
                fetchingDataFromApi = false;
                if (callback != undefined) {
                    callback();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                fetchingDataFromApi = false;
                if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"") {
                    swal({
                        title: 'Failed!',
                        text: jqXHR.responseText,
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                        allowOutsideClick: false
                    }).then(function () {
                        window.location = "@Url.Action("AuthorizationFailed", "users")"
                    })
                }
                else {
                    swal({
                        title: 'Contact Administrator !',
                        text: jqXHR.responseText,
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary'
                    })
                }
            }
        });


    }



                    	

					$(document).ready(function () {
                    $('body').on('change', '.dt-global-search', function(event) {
                      reachedEOF = false;

                      pager_setCurrentPageNumber(1);
                      fill_pagination(pager_onPageChanged);

                      $(pagerContainerId + ' #pager_lbl_pagecount').text(pager_getPageCount());
                    });


					fill_MailLogs()


					var Actions=getAutho("MailLogs","list")
					if(Actions == undefined){
					window.location = "@Url.Action("RoleAuthorizationFailed", "users")"
					}




					});
					

                    $("body").on("click", "[data-table-action]", function(a) {
                    a.preventDefault();
                    var b = $(this).data("table-action");
                    console.log('dataTables_wrapper', $(this).closest(".dataTables_wrapper").find(".buttons-print"));
                    if ("excel" === b && $(this).closest(".dataTables_wrapper").find(".buttons-excel").trigger("click"), "csv" === b && $(this).closest(".dataTables_wrapper").find(".buttons-csv").trigger("click"), "print" === b && $(this).closest(".dataTables_wrapper").find(".buttons-print").trigger("click"), "fullscreen" === b) {
                    var c = $(this).closest(".card");
                    c.hasClass("card--fullscreen") ? (c.removeClass("card--fullscreen"), $("body").removeClass("data-table-toggled")) : (c.addClass("card--fullscreen"), $("body").addClass("data-table-toggled"))
                    }
                    });
					</script>
					
					
					
					
								<script>
								$(document).ready(function () {
							 

								$("#btnFilter").click(function(){
								fill_MailLogs();
								})
								});
								</script>


					
                    
                     
					
